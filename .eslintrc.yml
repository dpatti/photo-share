root: true
env:
  es6: true
extends:
  - eslint:recommended
  - plugin:import/recommended
installedESLint: true
plugins: [flowtype, import]
rules:
  arrow-body-style: [off]
  arrow-parens: [error, as-needed, {requireForBlockBody: true}]
  arrow-spacing: [error]
  brace-style: [off, 1tbs, {allowSingleLine: true}]
  comma-dangle: [error, only-multiline]
  dot-location: [error, object]
  eqeqeq: [error, smart]
  generator-star-spacing: [error]
  indent: [error, 2]
  key-spacing: [error]
  keyword-spacing: [error]
  linebreak-style: [error, unix]
  max-len: [error, {code: 130, ignorePattern: (^angular|^ *controller:)}]
  new-parens: [error]
  no-cond-assign: [off]
  no-confusing-arrow: [off, {allowParens: true}]
  no-duplicate-imports: [error]
  no-empty: [off]
  no-extra-bind: [error]
  no-extra-boolean-cast: [off]
  no-lonely-if: [error]
  no-loop-func: [off]
  no-mixed-operators: [error]
  no-sequences: [error]
  no-shadow: [error]
  no-spaced-func: [error]
  no-trailing-spaces: [error]
  no-unused-vars: [error, {args: all, argsIgnorePattern: ^_}]
  no-useless-computed-key: [error]
  no-useless-constructor: [error]
  no-var: [error]
  no-whitespace-before-property: [error]
  object-curly-spacing: [error]
  object-shorthand: [error]
  padded-blocks: [error, never]
  prefer-arrow-callback: [error]
  prefer-const: [error]
  prefer-reflect: [error]
  prefer-rest-params: [error]
  prefer-spread: [error]
  prefer-template: [error]
  quotes: [error, single, {avoidEscape: true}]
  semi: [error, always]
  space-before-blocks: [error]
  space-before-function-paren: [error, never]
  space-infix-ops: [error]
  template-curly-spacing: [error]

  flowtype/boolean-style: [error]
  flowtype/define-flow-type: [error]
  flowtype/delimiter-dangle: [error, only-multiline]
  flowtype/generic-spacing: [error]
  flowtype/no-dupe-keys: [error]
  flowtype/no-primitive-constructor-types: [error]
  flowtype/no-weak-types: [error]
  flowtype/object-type-delimiter: [error]
  flowtype/require-parameter-type: [error, {excludeArrowFunctions: true}]
  flowtype/require-return-type: [error, {excludeArrowFunctions: true}]
  flowtype/require-valid-file-annotation: [error]
  flowtype/require-variable-type: [off]
  flowtype/semi: [error]
  flowtype/space-after-type-colon: [error]
  flowtype/space-before-generic-bracket: [error]
  flowtype/space-before-type-colon: [error, always]
  flowtype/union-intersection-spacing: [error]
  flowtype/use-flow-type: [error]

  import/no-unresolved: [off]
  import/extensions: [error, never]
